spring:
  datasource:
    url:  jdbc:mysql://${TODO_MYSQL_HOST}:${TODO_MYSQL_PORT}/${TODO_DATA_BASE_NAME}?useSSL=false
    username: ${TODO_MYSQL_USER_NAME}
    password: ${TODO_MYSQL_PASSWORD}
    driver-class-name: com.mysql.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${G_CLIENT_ID}
            clientSecret: ${G_CLIENT_SECRET}
            scope:
              - email
              - profile
          naver:
            clientId: ${N_CLIENT_ID}
            clientSecret: ${N_CLIENT_SECRET}
            clientAuthenticationMethod: post
            authorizationGrantType: authorization_code
            redirectUri: "https://serverbookvillage.kro.kr/login/oauth2/code/naver"
            scope:
              - nickname
              - email
              - profile_image
            clientName: Naver
          kakao:
            clientId: ${K_CLIENT_ID}
            clientSecret: ${K_CLIENT_SECRET}
            clientAuthenticationMethod: POST
            authorizationGrantType: authorization_code
            redirectUri: "https://serverbookvillage.kro.kr/login/oauth2/code/kakao"
            scope:
              - profile_nickname
              - profile_image
              - account_email
            clientName: Kakao
        provider:
          naver:
            authorizationUri: https://nid.naver.com/oauth2.0/authorize
            tokenUri: https://nid.naver.com/oauth2.0/token
            userInfoUri: https://openapi.naver.com/v1/nid/me
            userNameAttribute: response
          kakao:
            authorizationUri: https://kauth.kakao.com/oauth/authorize
            tokenUri: https://kauth.kakao.com/oauth/token
            userInfoUri: https://kapi.kakao.com/v2/user/me
            userNameAttribute: id
admin:
  email: ${ADMIN1_EMAIL}
jwt:
  key:
    secret: ${JWT_SECRET_KEY}               # 민감한 정보는 시스템 환경 변수에서 로드한다.
  access-token-expiration-minutes: 30
  refresh-token-expiration-minutes: 420